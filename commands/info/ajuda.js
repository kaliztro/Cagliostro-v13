const Discord = require("discord.js");
const config = require("../../config.json");
const { MessageActionRow, MessageSelectMenu } = require("discord.js")

module.exports = {
    name: "ajuda",
    aliases: ["aj"],

    run: async(client, message, args) => {

        let embed1 = new Discord.MessageEmbed()
        .setColor(config.cor)
        .setAuthor(client.user.username, client.user.displayAvatarURL({ dynamic: true }))
        .setDescription(`**Aqui est√£o os meus comandos**`);

        let painel = new MessageActionRow().addComponents( new MessageSelectMenu()
        .setCustomId(`menu`)
        .setPlaceholder(`veja meus comandos.`) // Mensagem estampada
        .addOptions([

            {
                label: `Inicial`,
                description: `Aqui est√£o os meus comandos`,
                emoji: `üìã`,
                value: `ini`,
            },
            {
                label: `Informa√ß√µes`,
                description: `comandos de Informa√ß√£o`,
                emoji: `üìª`,
                value: `info`,
            },
            {
                label: `Modera√ß√£o`,
                description: `comandos de Modera√ß√£o`,
                emoji: `ü¶æ`,
                value: `mod`,
            },
            {
                label: `ajustes`,
                description: `comandos de ajustes`,
                emoji: `‚öôÔ∏è`,
                value: `ajus`,
            },
        ])

      )

        message.reply({ embeds: [embed1], components: [painel] }).then(msg => {

            const filtro = (interaction) => 
            interaction.isSelectMenu()

            const coletor = msg.createMessageComponentCollector({
                filtro
            });

            coletor.on(`collect`, async (collected) => {

                let valor = collected.values[0]
                collected.deferUpdate()

                if (valor === `ini` ) {

                    let embed3 = new Discord.MessageEmbed()
                    .setColor(config.cor)
                    .setAuthor(client.user.username, client.user.displayAvatarURL({ dynamic: true }))
                    .setDescription(`Tela de inicio.`);

                    msg.edit({ embeds: [embed3], components: [painel] });
                };
                if (valor === `info` ) {

                    let embed2 = new Discord.MessageEmbed()
                    .setColor(config.cor)
                    .setAuthor(client.user.username, client.user.displayAvatarURL({ dynamic: true }))
                    .setDescription(`**Aqui est√£o os meus comandos que ira deixar voc√™ informado.** \n\n **‚Ä¢avatar**\nMostra o seu avatar, ou o avatar de quem vc mencionar.\n 
                    **‚Ä¢botinfo**\nMostra as informa√ß√µes do bot.\n\n **‚Ä¢serverinfo**\nMostra as Informa√ß√£o do servidor.\n\n **‚Ä¢userinfo**\nMostra as informa√ß√µes do usuario mencionado.\n 
                    **‚Ä¢ping**\nMostra a lat√™ncia da API.\n\n **‚Ä¢sugest√£o**\nUse esse comando para enviar sugest√µes aos membros da adm do servidor.\n
                    **‚Ä¢tempo**\nMostra o tempo que o bot esta ON.`);

                    msg.edit({ embeds: [embed2], components: [painel] });
                };
                if (valor === `mod` ) {

                    let embed3 = new Discord.MessageEmbed()
                    .setColor(config.cor)
                    .setAuthor(client.user.username, client.user.displayAvatarURL({ dynamic: true }))
                    .setDescription(`**Aqui est√£o os meus comandos de modera√ß√£o** \n\n lista de comandos`);

                    msg.edit({ embeds: [embed3], components: [painel] });
                };
                if (valor === `ajus` ) {

                    let embed3 = new Discord.MessageEmbed()
                    .setColor(config.cor)
                    .setAuthor(client.user.username, client.user.displayAvatarURL({ dynamic: true }))
                    .setDescription(`**Aqui est√£o os meus comandos de ajustes** \n\n lista de comandos`);

                    msg.edit({ embeds: [embed3], components: [painel] });
                };
            })
        })

    }
}